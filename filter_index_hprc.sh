#!/bin/bash -l
# author: Lucas Patel (lpatel@ucsd.edu)
# date: 12/22/23 
# description: Script to perform index-based host filtration on FASTQ files from metagenomics experiments by assessing PML distributions generated by Movi to distinguish human from non-human reads.

source config.sh
conda activate human-depletion

f=$1
basename=$(basename "$f" .fastq)

# Check if input file is provided and exists
if [ -z "$f" ] || [ ! -f "$f" ]; then
  echo "Error: FASTQ input not provided or does not exist."
  exit 1
fi

# First, compute pseudo matching lengths
cmd="$MOVI_PATH query $MOVI_INDEX_PATH $f"
echo $cmd
eval $cmd 2>&1
# Check if command was successful
if [ $? -ne 0 ]; then
  echo "Error: Failed to compute pseudo matching lengths."
  exit 1
fi

# Check if .bin file exists before converting PMLs
if [ ! -f "$f.default.mpml.bin" ]; then
  echo "Error: $f.default.mpml.bin does not exist."
  exit 1
fi

# Next, convert PMLs to readable format
cmd="$MOVI_PATH view $f.default.mpml.bin > $f.mpml.txt"
echo $cmd
eval $cmd 2>&1
# Check if command was successful
if [ $? -ne 0 ]; then
  echo "Error: Failed to convert PMLs to readable format."
  exit 1
fi

# Compare line counts
lines_reads=$(wc -l < "$f")
lines_mpml_txt=$(wc -l < "$f.mpml.txt")
expected_lines_mpml_txt=$((lines_reads / 2))

if [ $lines_mpml_txt -ne $expected_lines_mpml_txt ]; then
  echo "Error: Line count of $f.mpml.txt does not match expected count."
  exit 1
fi

echo "python scripts/filter_pmls.py $f.mpml.txt $f $TMPDIR"
python scripts/filter_pmls.py $f.mpml.txt $f $TMPDIR

# Check if new .fastq files exist
if [ ! -f "$TMPDIR/${basename}.fastq.mpml.non-human.fastq" ]; then
  echo "Error: $TMPDIR/${basename}.fastq.mpml.non-human.fastq does not exist."
  exit 1
fi

new_basename="${basename%.*}"
echo "$TMPDIR/${basename}.fastq.mpml.non-human.fastq" "$TMPDIR/${new_basename}.INDEX-HPRC.fastq"
mv "$TMPDIR/${basename}.fastq.mpml.non-human.fastq" "$TMPDIR/${new_basename}.INDEX-HPRC.fastq"
